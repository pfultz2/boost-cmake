


bcm_test(NAME boost_metaparse_BOOST_METAPARSE_STRING SOURCES BOOST_METAPARSE_STRING.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_accept SOURCES accept.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_accept_when SOURCES accept_when.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_back_inserter SOURCES back_inserter.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_all_headers SOURCES all_headers.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_alphanum SOURCES alphanum.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_always_c SOURCES always_c.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_always SOURCES always.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_at_c SOURCES at_c.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_build_parser SOURCES build_parser.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_change_error_message SOURCES change_error_message.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_concat SOURCES concat.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_define_error SOURCES define_error.cpp)
bcm_test(NAME boost_metaparse_digit SOURCES digit.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_digit_to_int SOURCES digit_to_int.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_digit_val SOURCES digit_val.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_empty SOURCES empty.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_empty_string SOURCES empty_string.cpp)
bcm_test(NAME boost_metaparse_entire_input SOURCES entire_input.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_except SOURCES except.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_fail_at_first_char_expected SOURCES fail_at_first_char_expected.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_fail SOURCES fail.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_fail_tag SOURCES fail_tag.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_first_of SOURCES first_of.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_foldl1 SOURCES foldl1.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_foldl SOURCES foldl.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_foldl_reject_incomplete1 SOURCES foldl_reject_incomplete1.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_foldl_reject_incomplete SOURCES foldl_reject_incomplete.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_foldl_reject_incomplete_start_with_parser SOURCES foldl_reject_incomplete_start_with_parser.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_foldl_start_with_parser SOURCES foldl_start_with_parser.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_foldr1 SOURCES foldr1.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_foldr SOURCES foldr.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_foldr_reject_incomplete1 SOURCES foldr_reject_incomplete1.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_foldr_reject_incomplete SOURCES foldr_reject_incomplete.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_foldr_start_with_parser SOURCES foldr_start_with_parser.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_front_inserter SOURCES front_inserter.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_grammar SOURCES grammar.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_has_type SOURCES has_type.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_if_ SOURCES if_.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_in_range_c SOURCES in_range_c.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_in_range SOURCES in_range.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_int_ SOURCES int_.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_int_to_digit SOURCES int_to_digit.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_is_char_c SOURCES is_char_c.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_is_digit SOURCES is_digit.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_is_error SOURCES is_error.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_is_lcase_letter SOURCES is_lcase_letter.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_is_letter SOURCES is_letter.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_is_ucase_letter SOURCES is_ucase_letter.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_is_whitespace SOURCES is_whitespace.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_iterate_c SOURCES iterate_c.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_iterate SOURCES iterate.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_keyword SOURCES keyword.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_last_of SOURCES last_of.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_letter SOURCES letter.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_lit_c SOURCES lit_c.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_lit SOURCES lit.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_look_ahead SOURCES look_ahead.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_long_string SOURCES long_string.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_middle_of SOURCES middle_of.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_next_digit SOURCES next_digit.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_nth_of SOURCES nth_of.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_one_char SOURCES one_char.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_one_char_except_c SOURCES one_char_except_c.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_one_char_except SOURCES one_char_except.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_one_of_c SOURCES one_of_c.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_one_of SOURCES one_of.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_optional SOURCES optional.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_pop_back SOURCES pop_back.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_pop_front SOURCES pop_front.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_push_back_c SOURCES push_back_c.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_push_front_c SOURCES push_front_c.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_range_c SOURCES range_c.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_range SOURCES range.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_reject SOURCES reject.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_remove_trailing_no_chars SOURCES remove_trailing_no_chars.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_repeated1 SOURCES repeated1.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_repeated SOURCES repeated.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_repeated_one_of1 SOURCES repeated_one_of1.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_repeated_one_of SOURCES repeated_one_of.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_repeated_reject_incomplete1 SOURCES repeated_reject_incomplete1.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_repeated_reject_incomplete SOURCES repeated_reject_incomplete.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_return_ SOURCES return_.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_returns SOURCES returns.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_sequence SOURCES sequence.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_sequence_apply SOURCES sequence_apply.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_size SOURCES size.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_source_position SOURCES source_position.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_space SOURCES space.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_spaces SOURCES spaces.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_string SOURCES string.cpp)
bcm_test(NAME boost_metaparse_string_iterator_tag SOURCES string_iterator_tag.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_string_tag SOURCES string_tag.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_swap SOURCES swap.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_token SOURCES token.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_too_long_string SOURCES too_long_string.cpp COMPILE_ONLY WILL_FAIL)
bcm_test(NAME boost_metaparse_transform SOURCES transform.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_transform_error SOURCES transform_error.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_transform_error_message SOURCES transform_error_message.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_unless_error SOURCES unless_error.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_unpaired SOURCES unpaired.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_update_c SOURCES update_c.cpp COMPILE_ONLY)
bcm_test(NAME boost_metaparse_version SOURCES version.cpp COMPILE_ONLY)

