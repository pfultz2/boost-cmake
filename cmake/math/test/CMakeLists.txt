include(BCMTest)

find_package(boost_regex)
find_package(boost_multiprecision)
find_package(boost_bind)
find_package(boost_random)
find_package(boost_typeof)
find_package(boost_test)
find_package(boost_serialization)
find_package(boost_numeric_ublas)

bcm_test_link_libraries(boost_math
boost::regex
boost::multiprecision
boost::bind
boost::random
boost::typeof
boost::serialization
boost::numeric_ublas
)

add_subdirectory(test_instances)
bcm_test_link_libraries(test_instances)

# HACK: Workaround broken includes
file(GLOB TEST_HEADERS RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} *.hpp)
foreach(HEADER ${TEST_HEADERS})
    configure_file(${HEADER} ${CMAKE_CURRENT_BINARY_DIR}/include/libs/math/test/${HEADER} @ONLY)
endforeach()

add_library(boost_math_test_options INTERFACE)
bcm_test_link_libraries(boost_math_test_options)
target_include_directories(boost_math_test_options INTERFACE . test_instances ../include_private ${CMAKE_CURRENT_BINARY_DIR}/include)

# Copyright Daryle Walker, Hubert Holin, John Maddock 2006 - 2007
# copyright Paul A. Bristow 2006 - 2010
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy at
# http://www.boost.org/LICENSE_1_0.txt.
# \math_toolkit\libs\math\test\jamfile.v2
# Runs all math toolkit tests, functions & distributions,
# and build math examples.

# bring in the rules for testing


#
# PCH support is broken when --remove-test-targets is specified on the command
# line.  Disable it until someone fixes this.
#




#<toolset>intel-linux:<pch>off
# <toolset>msvc:<cxxflags>/wd4506 has no effect?
# suppress xstring(237) : warning C4506: no definition for inline function
# For simplicities sake, make everything a static lib:




#lib test_instances : float_test_instances.cpp double_test_instances.cpp ldouble_test_instances.cpp real_concept_test_instances.cpp pch
#                   : <link>static ;

bcm_test(NAME hypot_test SOURCES hypot_test.cpp)
target_link_libraries(hypot_test boost::test)
bcm_test(NAME pow_test SOURCES pow_test.cpp)
target_link_libraries(pow_test boost::test)
bcm_test(NAME log1p_expm1_test SOURCES log1p_expm1_test.cpp)
target_link_libraries(log1p_expm1_test boost::test)
bcm_test(NAME powm1_sqrtp1m1_test SOURCES powm1_sqrtp1m1_test.cpp)
target_link_libraries(powm1_sqrtp1m1_test boost::test)
bcm_test(NAME special_functions_test SOURCES special_functions_test.cpp)
target_link_libraries(special_functions_test boost::test)
bcm_test(NAME test_airy SOURCES test_airy.cpp)
target_link_libraries(test_airy boost::test)
bcm_test(NAME test_arcsine SOURCES test_arcsine.cpp)
target_link_libraries(test_arcsine boost::test)
bcm_test(NAME test_bernoulli SOURCES test_bernoulli.cpp)
target_link_libraries(test_bernoulli boost::test)
bcm_test(NAME test_constants SOURCES test_constants.cpp)
target_link_libraries(test_constants boost::test)
bcm_test(NAME test_print_info_on_type SOURCES test_print_info_on_type.cpp)
target_link_libraries(test_print_info_on_type boost::test)
bcm_test(NAME test_constant_generate SOURCES test_constant_generate.cpp)
target_link_libraries(test_constant_generate boost::test)
set_target_properties(test_constant_generate PROPERTIES CXX_EXCEPTIONS off)
target_compile_definitions(test_constant_generate PUBLIC USE_CPP_FLOAT=1)
bcm_test(NAME test_bessel_j SOURCES test_bessel_j.cpp)
target_link_libraries(test_bessel_j boost::test)
bcm_test(NAME test_bessel_y SOURCES test_bessel_y.cpp)
target_link_libraries(test_bessel_y boost::test)
bcm_test(NAME test_bessel_i SOURCES test_bessel_i.cpp)
target_link_libraries(test_bessel_i boost::test)
bcm_test(NAME test_bessel_k SOURCES test_bessel_k.cpp)
target_link_libraries(test_bessel_k boost::test)
bcm_test(NAME test_bessel_j_prime SOURCES test_bessel_j_prime.cpp)
target_link_libraries(test_bessel_j_prime boost::test)
bcm_test(NAME test_bessel_y_prime SOURCES test_bessel_y_prime.cpp)
target_link_libraries(test_bessel_y_prime boost::test)
bcm_test(NAME test_bessel_i_prime SOURCES test_bessel_i_prime.cpp)
target_link_libraries(test_bessel_i_prime boost::test)
bcm_test(NAME test_bessel_k_prime SOURCES test_bessel_k_prime.cpp)
target_link_libraries(test_bessel_k_prime boost::test)
bcm_test(NAME test_beta SOURCES test_beta.cpp)
target_link_libraries(test_beta boost::test)
bcm_test(NAME test_bessel_airy_zeros SOURCES test_bessel_airy_zeros.cpp)
target_link_libraries(test_bessel_airy_zeros boost::test)
bcm_test(NAME test_bernoulli_constants SOURCES test_bernoulli_constants.cpp)
target_link_libraries(test_bernoulli_constants boost::test)
bcm_test(NAME test_beta_dist SOURCES test_beta_dist.cpp)
target_link_libraries(test_beta_dist boost::test)
bcm_test(NAME test_binomial_float SOURCES test_binomial.cpp)
target_link_libraries(test_binomial_float boost::test)
target_compile_definitions(test_binomial_float PUBLIC TEST_FLOAT)
bcm_test(NAME test_binomial_double SOURCES test_binomial.cpp)
target_link_libraries(test_binomial_double boost::test)
target_compile_definitions(test_binomial_double PUBLIC TEST_DOUBLE)
bcm_test(NAME test_binomial_long_double SOURCES test_binomial.cpp)
target_link_libraries(test_binomial_long_double boost::test)
target_compile_definitions(test_binomial_long_double PUBLIC TEST_LDOUBLE)
bcm_test(NAME test_binomial_real_concept0 SOURCES test_binomial.cpp)
target_link_libraries(test_binomial_real_concept0 boost::test)
target_compile_definitions(test_binomial_real_concept0 PUBLIC TEST_ROUNDING=0)
bcm_test(NAME test_binomial_real_concept1 SOURCES test_binomial.cpp)
target_link_libraries(test_binomial_real_concept1 boost::test)
target_compile_definitions(test_binomial_real_concept1 PUBLIC TEST_ROUNDING=1)
bcm_test(NAME test_binomial_real_concept2 SOURCES test_binomial.cpp)
target_link_libraries(test_binomial_real_concept2 boost::test)
target_compile_definitions(test_binomial_real_concept2 PUBLIC TEST_ROUNDING=2)
bcm_test(NAME test_binomial_real_concept3 SOURCES test_binomial.cpp)
target_link_libraries(test_binomial_real_concept3 boost::test)
target_compile_definitions(test_binomial_real_concept3 PUBLIC TEST_ROUNDING=3)
bcm_test(NAME test_binomial_real_concept4 SOURCES test_binomial.cpp)
target_link_libraries(test_binomial_real_concept4 boost::test)
target_compile_definitions(test_binomial_real_concept4 PUBLIC TEST_ROUNDING=4)
bcm_test(NAME test_binomial_real_concept5 SOURCES test_binomial.cpp)
target_link_libraries(test_binomial_real_concept5 boost::test)
target_compile_definitions(test_binomial_real_concept5 PUBLIC TEST_ROUNDING=5)
bcm_test(NAME test_binomial_real_concept6 SOURCES test_binomial.cpp)
target_link_libraries(test_binomial_real_concept6 boost::test)
target_compile_definitions(test_binomial_real_concept6 PUBLIC TEST_ROUNDING=6)
bcm_test(NAME test_binomial_coeff SOURCES test_binomial_coeff.cpp)
target_link_libraries(test_binomial_coeff boost::test)
bcm_test(NAME test_carlson_1 SOURCES test_carlson.cpp)
target_link_libraries(test_carlson_1 boost::test)
target_compile_definitions(test_carlson_1 PUBLIC TEST1)
bcm_test(NAME test_carlson_2 SOURCES test_carlson.cpp)
target_link_libraries(test_carlson_2 boost::test)
target_compile_definitions(test_carlson_2 PUBLIC TEST2)
bcm_test(NAME test_carlson_3 SOURCES test_carlson.cpp)
target_link_libraries(test_carlson_3 boost::test)
target_compile_definitions(test_carlson_3 PUBLIC TEST3)
bcm_test(NAME test_carlson_4 SOURCES test_carlson.cpp)
target_link_libraries(test_carlson_4 boost::test)
target_compile_definitions(test_carlson_4 PUBLIC TEST4)
bcm_test(NAME test_cauchy SOURCES test_cauchy.cpp)
target_link_libraries(test_cauchy boost::test)
bcm_test(NAME test_cbrt SOURCES test_cbrt.cpp)
target_link_libraries(test_cbrt boost::test)
bcm_test(NAME test_chi_squared SOURCES test_chi_squared.cpp)
target_link_libraries(test_chi_squared boost::test)
bcm_test(NAME test_classify SOURCES test_classify.cpp)
target_link_libraries(test_classify boost::test)
bcm_test(NAME test_difference SOURCES test_difference.cpp)
target_link_libraries(test_difference boost::test)
bcm_test(NAME test_digamma SOURCES test_digamma.cpp)
target_link_libraries(test_digamma boost::test)
bcm_test(NAME test_dist_overloads SOURCES test_dist_overloads.cpp)
target_link_libraries(test_dist_overloads boost::test)
bcm_test(NAME test_ellint_1 SOURCES test_ellint_1.cpp)
target_link_libraries(test_ellint_1 boost::test)
bcm_test(NAME test_ellint_2 SOURCES test_ellint_2.cpp)
target_link_libraries(test_ellint_2 boost::test)
bcm_test(NAME test_ellint_3 SOURCES test_ellint_3.cpp)
target_link_libraries(test_ellint_3 boost::test)
bcm_test(NAME test_ellint_d SOURCES test_ellint_d.cpp)
target_link_libraries(test_ellint_d boost::test)
bcm_test(NAME test_jacobi_zeta SOURCES test_jacobi_zeta.cpp)
target_link_libraries(test_jacobi_zeta boost::test)
bcm_test(NAME test_heuman_lambda SOURCES test_heuman_lambda.cpp)
target_link_libraries(test_heuman_lambda boost::test)
bcm_test(NAME test_erf SOURCES test_erf.cpp)
target_link_libraries(test_erf boost::test)
bcm_test(NAME test_error_handling SOURCES test_error_handling.cpp)
target_link_libraries(test_error_handling boost::test)
bcm_test(NAME test_expint SOURCES test_expint.cpp)
target_link_libraries(test_expint boost::test)
bcm_test(NAME test_exponential_dist SOURCES test_exponential_dist.cpp)
target_link_libraries(test_exponential_dist boost::test)
bcm_test(NAME test_extreme_value SOURCES test_extreme_value.cpp)
target_link_libraries(test_extreme_value boost::test)
bcm_test(NAME test_factorials SOURCES test_factorials.cpp)
target_link_libraries(test_factorials boost::test)
bcm_test(NAME test_find_location SOURCES test_find_location.cpp)
target_link_libraries(test_find_location boost::test)
bcm_test(NAME test_find_scale SOURCES test_find_scale.cpp)
target_link_libraries(test_find_scale boost::test)
bcm_test(NAME test_fisher_f SOURCES test_fisher_f.cpp)
target_link_libraries(test_fisher_f boost::test)
bcm_test(NAME test_gamma SOURCES test_gamma.cpp)
target_link_libraries(test_gamma boost::test)
bcm_test(NAME test_gamma_dist SOURCES test_gamma_dist.cpp)
target_link_libraries(test_gamma_dist boost::test)
bcm_test(NAME test_geometric SOURCES test_geometric.cpp)
target_link_libraries(test_geometric boost::test)
bcm_test(NAME test_hankel SOURCES test_hankel.cpp)
target_link_libraries(test_hankel boost::test)
bcm_test(NAME test_hermite SOURCES test_hermite.cpp)
target_link_libraries(test_hermite boost::test)
bcm_test(NAME test_hyperexponential_dist SOURCES test_hyperexponential_dist.cpp)
target_link_libraries(test_hyperexponential_dist boost::test)
bcm_test(NAME test_hypergeometric_dist0 SOURCES test_hypergeometric_dist.cpp)
target_link_libraries(test_hypergeometric_dist0 boost::test)
target_compile_definitions(test_hypergeometric_dist0 PUBLIC TEST_QUANT=0)
bcm_test(NAME test_hypergeometric_dist1 SOURCES test_hypergeometric_dist.cpp)
target_link_libraries(test_hypergeometric_dist1 boost::test)
target_compile_definitions(test_hypergeometric_dist1 PUBLIC TEST_QUANT=1)
bcm_test(NAME test_hypergeometric_dist2 SOURCES test_hypergeometric_dist.cpp)
target_link_libraries(test_hypergeometric_dist2 boost::test)
target_compile_definitions(test_hypergeometric_dist2 PUBLIC TEST_QUANT=2)
bcm_test(NAME test_hypergeometric_dist3 SOURCES test_hypergeometric_dist.cpp)
target_link_libraries(test_hypergeometric_dist3 boost::test)
target_compile_definitions(test_hypergeometric_dist3 PUBLIC TEST_QUANT=3)
bcm_test(NAME test_hypergeometric_dist4 SOURCES test_hypergeometric_dist.cpp)
target_link_libraries(test_hypergeometric_dist4 boost::test)
target_compile_definitions(test_hypergeometric_dist4 PUBLIC TEST_QUANT=4)
bcm_test(NAME test_hypergeometric_dist5 SOURCES test_hypergeometric_dist.cpp)
target_link_libraries(test_hypergeometric_dist5 boost::test)
target_compile_definitions(test_hypergeometric_dist5 PUBLIC TEST_QUANT=5)
bcm_test(NAME test_ibeta_float SOURCES test_ibeta.cpp)
target_link_libraries(test_ibeta_float boost::test)
target_compile_definitions(test_ibeta_float PUBLIC TEST_FLOAT)
bcm_test(NAME test_ibeta_double SOURCES test_ibeta.cpp)
target_link_libraries(test_ibeta_double boost::test)
target_compile_definitions(test_ibeta_double PUBLIC TEST_DOUBLE)
bcm_test(NAME test_ibeta_long_double SOURCES test_ibeta.cpp)
target_link_libraries(test_ibeta_long_double boost::test)
target_compile_definitions(test_ibeta_long_double PUBLIC TEST_LDOUBLE)
bcm_test(NAME test_ibeta_real_concept1 SOURCES test_ibeta.cpp)
target_link_libraries(test_ibeta_real_concept1 boost::test)
target_compile_definitions(test_ibeta_real_concept1 PUBLIC TEST_DATA=1)
bcm_test(NAME test_ibeta_real_concept2 SOURCES test_ibeta.cpp)
target_link_libraries(test_ibeta_real_concept2 boost::test)
target_compile_definitions(test_ibeta_real_concept2 PUBLIC TEST_DATA=2)
bcm_test(NAME test_ibeta_real_concept3 SOURCES test_ibeta.cpp)
target_link_libraries(test_ibeta_real_concept3 boost::test)
target_compile_definitions(test_ibeta_real_concept3 PUBLIC TEST_DATA=3)
bcm_test(NAME test_ibeta_real_concept4 SOURCES test_ibeta.cpp)
target_link_libraries(test_ibeta_real_concept4 boost::test)
target_compile_definitions(test_ibeta_real_concept4 PUBLIC TEST_DATA=4)

bcm_test(NAME test_ibeta_derivative_float SOURCES test_ibeta_derivative.cpp)
target_link_libraries(test_ibeta_derivative_float boost::test)
target_compile_definitions(test_ibeta_derivative_float PUBLIC TEST_FLOAT)
bcm_test(NAME test_ibeta_derivative_double SOURCES test_ibeta_derivative.cpp)
target_link_libraries(test_ibeta_derivative_double boost::test)
target_compile_definitions(test_ibeta_derivative_double PUBLIC TEST_DOUBLE)
bcm_test(NAME test_ibeta_derivative_long_double SOURCES test_ibeta_derivative.cpp)
target_link_libraries(test_ibeta_derivative_long_double boost::test)
target_compile_definitions(test_ibeta_derivative_long_double PUBLIC TEST_LDOUBLE)
bcm_test(NAME test_ibeta_derivative_real_concept1 SOURCES test_ibeta_derivative.cpp)
target_link_libraries(test_ibeta_derivative_real_concept1 boost::test)
target_compile_definitions(test_ibeta_derivative_real_concept1 PUBLIC TEST_DATA=1)
bcm_test(NAME test_ibeta_derivative_real_concept2 SOURCES test_ibeta_derivative.cpp)
target_link_libraries(test_ibeta_derivative_real_concept2 boost::test)
target_compile_definitions(test_ibeta_derivative_real_concept2 PUBLIC TEST_DATA=2)
bcm_test(NAME test_ibeta_derivative_real_concept3 SOURCES test_ibeta_derivative.cpp)
target_link_libraries(test_ibeta_derivative_real_concept3 boost::test)
target_compile_definitions(test_ibeta_derivative_real_concept3 PUBLIC TEST_DATA=3)
bcm_test(NAME test_ibeta_derivative_real_concept4 SOURCES test_ibeta_derivative.cpp)
target_link_libraries(test_ibeta_derivative_real_concept4 boost::test)
target_compile_definitions(test_ibeta_derivative_real_concept4 PUBLIC TEST_DATA=4)

bcm_test(NAME test_ibeta_inv_float SOURCES test_ibeta_inv.cpp)
target_link_libraries(test_ibeta_inv_float boost::test)
target_compile_definitions(test_ibeta_inv_float PUBLIC TEST_FLOAT)
bcm_test(NAME test_ibeta_inv_double SOURCES test_ibeta_inv.cpp)
target_link_libraries(test_ibeta_inv_double boost::test)
target_compile_definitions(test_ibeta_inv_double PUBLIC TEST_DOUBLE)
bcm_test(NAME test_ibeta_inv_long_double SOURCES test_ibeta_inv.cpp)
target_link_libraries(test_ibeta_inv_long_double boost::test)
target_compile_definitions(test_ibeta_inv_long_double PUBLIC TEST_LDOUBLE)
bcm_test(NAME test_ibeta_inv_real_concept1 SOURCES test_ibeta_inv.cpp)
target_link_libraries(test_ibeta_inv_real_concept1 boost::test)
target_compile_definitions(test_ibeta_inv_real_concept1 PUBLIC TEST_DATA=1)
bcm_test(NAME test_ibeta_inv_real_concept2 SOURCES test_ibeta_inv.cpp)
target_link_libraries(test_ibeta_inv_real_concept2 boost::test)
target_compile_definitions(test_ibeta_inv_real_concept2 PUBLIC TEST_DATA=2)
bcm_test(NAME test_ibeta_inv_real_concept3 SOURCES test_ibeta_inv.cpp)
target_link_libraries(test_ibeta_inv_real_concept3 boost::test)
target_compile_definitions(test_ibeta_inv_real_concept3 PUBLIC TEST_DATA=3)
bcm_test(NAME test_ibeta_inv_real_concept4 SOURCES test_ibeta_inv.cpp)
target_link_libraries(test_ibeta_inv_real_concept4 boost::test)
target_compile_definitions(test_ibeta_inv_real_concept4 PUBLIC TEST_DATA=4)
bcm_test(NAME test_ibeta_inv_ab_float SOURCES test_ibeta_inv_ab.cpp)
target_link_libraries(test_ibeta_inv_ab_float boost::test)
target_compile_definitions(test_ibeta_inv_ab_float PUBLIC TEST_FLOAT)
bcm_test(NAME test_ibeta_inv_ab_double SOURCES test_ibeta_inv_ab.cpp)
target_link_libraries(test_ibeta_inv_ab_double boost::test)
target_compile_definitions(test_ibeta_inv_ab_double PUBLIC TEST_DOUBLE)
bcm_test(NAME test_ibeta_inv_ab_long_double SOURCES test_ibeta_inv_ab.cpp)
target_link_libraries(test_ibeta_inv_ab_long_double boost::test)
target_compile_definitions(test_ibeta_inv_ab_long_double PUBLIC TEST_LDOUBLE)
bcm_test(NAME test_ibeta_inv_ab_real_concept1 SOURCES test_ibeta_inv_ab.cpp)
target_link_libraries(test_ibeta_inv_ab_real_concept1 boost::test)
target_compile_definitions(test_ibeta_inv_ab_real_concept1 PUBLIC TEST_DATA=1)
bcm_test(NAME test_ibeta_inv_ab_real_concept2 SOURCES test_ibeta_inv_ab.cpp)
target_link_libraries(test_ibeta_inv_ab_real_concept2 boost::test)
target_compile_definitions(test_ibeta_inv_ab_real_concept2 PUBLIC TEST_DATA=2)
bcm_test(NAME test_ibeta_inv_ab_real_concept3 SOURCES test_ibeta_inv_ab.cpp)
target_link_libraries(test_ibeta_inv_ab_real_concept3 boost::test)
target_compile_definitions(test_ibeta_inv_ab_real_concept3 PUBLIC TEST_DATA=3)
bcm_test(NAME test_igamma SOURCES test_igamma.cpp)
target_link_libraries(test_igamma boost::test)
bcm_test(NAME test_igamma_inv_float SOURCES test_igamma_inv.cpp)
target_link_libraries(test_igamma_inv_float boost::test)
target_compile_definitions(test_igamma_inv_float PUBLIC TEST_FLOAT)
bcm_test(NAME test_igamma_inv_double SOURCES test_igamma_inv.cpp)
target_link_libraries(test_igamma_inv_double boost::test)
target_compile_definitions(test_igamma_inv_double PUBLIC TEST_DOUBLE)
bcm_test(NAME test_igamma_inv_long_double SOURCES test_igamma_inv.cpp)
target_link_libraries(test_igamma_inv_long_double boost::test)
target_compile_definitions(test_igamma_inv_long_double PUBLIC TEST_LDOUBLE)
bcm_test(NAME test_igamma_inv_real_concept SOURCES test_igamma_inv.cpp)
target_link_libraries(test_igamma_inv_real_concept boost::test)
target_compile_definitions(test_igamma_inv_real_concept PUBLIC TEST_REAL_CONCEPT)
bcm_test(NAME test_igamma_inva_float SOURCES test_igamma_inva.cpp)
target_link_libraries(test_igamma_inva_float boost::test)
target_compile_definitions(test_igamma_inva_float PUBLIC TEST_FLOAT)
bcm_test(NAME test_igamma_inva_double SOURCES test_igamma_inva.cpp)
target_link_libraries(test_igamma_inva_double boost::test)
target_compile_definitions(test_igamma_inva_double PUBLIC TEST_DOUBLE)
bcm_test(NAME test_igamma_inva_long_double SOURCES test_igamma_inva.cpp)
target_link_libraries(test_igamma_inva_long_double boost::test)
target_compile_definitions(test_igamma_inva_long_double PUBLIC TEST_LDOUBLE)
bcm_test(NAME test_igamma_inva_real_concept SOURCES test_igamma_inva.cpp)
target_link_libraries(test_igamma_inva_real_concept boost::test)
target_compile_definitions(test_igamma_inva_real_concept PUBLIC TEST_REAL_CONCEPT)
bcm_test(NAME test_instantiate1 SOURCES test_instantiate1.cpp test_instantiate2.cpp)
bcm_test(NAME test_inverse_chi_squared_distribution SOURCES test_inverse_chi_squared_distribution.cpp)
target_link_libraries(test_inverse_chi_squared_distribution boost::test)
bcm_test(NAME test_inverse_gamma_distribution SOURCES test_inverse_gamma_distribution.cpp)
target_link_libraries(test_inverse_gamma_distribution boost::test)

bcm_test(NAME test_inverse_gaussian SOURCES test_inverse_gaussian.cpp)
target_link_libraries(test_inverse_gaussian boost::test)

bcm_test(NAME test_jacobi SOURCES test_jacobi.cpp)
target_link_libraries(test_jacobi boost::test)
bcm_test(NAME test_laplace SOURCES test_laplace.cpp)
target_link_libraries(test_laplace boost::test)
bcm_test(NAME test_inv_hyp SOURCES test_inv_hyp.cpp)
target_link_libraries(test_inv_hyp boost::test)
bcm_test(NAME test_laguerre SOURCES test_laguerre.cpp)
target_link_libraries(test_laguerre boost::test)
bcm_test(NAME test_legendre SOURCES test_legendre.cpp)
target_link_libraries(test_legendre boost::test)
bcm_test(NAME test_ldouble_simple SOURCES test_ldouble_simple.cpp)
target_link_libraries(test_ldouble_simple boost::test)
bcm_test(NAME test_logistic_dist SOURCES test_logistic_dist.cpp)
target_link_libraries(test_logistic_dist boost::test)
bcm_test(NAME test_lognormal SOURCES test_lognormal.cpp)
target_link_libraries(test_lognormal boost::test)
bcm_test(NAME test_minima SOURCES test_minima.cpp)
target_link_libraries(test_minima boost::test)
bcm_test(NAME test_negative_binomial_float SOURCES test_negative_binomial.cpp)
target_link_libraries(test_negative_binomial_float boost::test)
target_compile_definitions(test_negative_binomial_float PUBLIC TEST_FLOAT)
bcm_test(NAME test_negative_binomial_double SOURCES test_negative_binomial.cpp)
target_link_libraries(test_negative_binomial_double boost::test)
target_compile_definitions(test_negative_binomial_double PUBLIC TEST_DOUBLE)
bcm_test(NAME test_negative_binomial_long_double SOURCES test_negative_binomial.cpp)
target_link_libraries(test_negative_binomial_long_double boost::test)
target_compile_definitions(test_negative_binomial_long_double PUBLIC TEST_LDOUBLE)
bcm_test(NAME test_negative_binomial_real_concept SOURCES test_negative_binomial.cpp)
target_link_libraries(test_negative_binomial_real_concept boost::test)
target_compile_definitions(test_negative_binomial_real_concept PUBLIC TEST_REAL_CONCEPT)
bcm_test(NAME test_next SOURCES test_next.cpp)
target_link_libraries(test_next boost::test)
bcm_test(NAME test_nc_chi_squared_float SOURCES test_nc_chi_squared.cpp)
target_link_libraries(test_nc_chi_squared_float boost::test)
target_compile_definitions(test_nc_chi_squared_float PUBLIC TEST_FLOAT)
bcm_test(NAME test_nc_chi_squared_double SOURCES test_nc_chi_squared.cpp)
target_link_libraries(test_nc_chi_squared_double boost::test)
target_compile_definitions(test_nc_chi_squared_double PUBLIC TEST_DOUBLE)
bcm_test(NAME test_nc_chi_squared_long_double SOURCES test_nc_chi_squared.cpp)
target_link_libraries(test_nc_chi_squared_long_double boost::test)
target_compile_definitions(test_nc_chi_squared_long_double PUBLIC TEST_LDOUBLE)
bcm_test(NAME test_nc_chi_squared_real_concept SOURCES test_nc_chi_squared.cpp)
target_link_libraries(test_nc_chi_squared_real_concept boost::test)
target_compile_definitions(test_nc_chi_squared_real_concept PUBLIC TEST_REAL_CONCEPT)
bcm_test(NAME test_nc_beta_float SOURCES test_nc_beta.cpp)
target_link_libraries(test_nc_beta_float boost::test)
target_compile_definitions(test_nc_beta_float PUBLIC TEST_FLOAT)
bcm_test(NAME test_nc_beta_double SOURCES test_nc_beta.cpp)
target_link_libraries(test_nc_beta_double boost::test)
target_compile_definitions(test_nc_beta_double PUBLIC TEST_DOUBLE)
bcm_test(NAME test_nc_beta_long_double SOURCES test_nc_beta.cpp)
target_link_libraries(test_nc_beta_long_double boost::test)
target_compile_definitions(test_nc_beta_long_double PUBLIC TEST_LDOUBLE)
bcm_test(NAME test_nc_beta_real_concept1 SOURCES test_nc_beta.cpp)
target_link_libraries(test_nc_beta_real_concept1 boost::test)
target_compile_definitions(test_nc_beta_real_concept1 PUBLIC TEST_DATA=1)
bcm_test(NAME test_nc_beta_real_concept2 SOURCES test_nc_beta.cpp)
target_link_libraries(test_nc_beta_real_concept2 boost::test)
target_compile_definitions(test_nc_beta_real_concept2 PUBLIC TEST_DATA=2)
bcm_test(NAME test_nc_f SOURCES test_nc_f.cpp)
target_link_libraries(test_nc_f boost::test)
bcm_test(NAME test_nc_t_float SOURCES test_nc_t.cpp)
target_link_libraries(test_nc_t_float boost::test)
target_compile_definitions(test_nc_t_float PUBLIC TEST_FLOAT)
bcm_test(NAME test_nc_t_double SOURCES test_nc_t.cpp)
target_link_libraries(test_nc_t_double boost::test)
target_compile_definitions(test_nc_t_double PUBLIC TEST_DOUBLE)
bcm_test(NAME test_nc_t_long_double SOURCES test_nc_t.cpp)
target_link_libraries(test_nc_t_long_double boost::test)
target_compile_definitions(test_nc_t_long_double PUBLIC TEST_LDOUBLE)
bcm_test(NAME test_nc_t_real_concept SOURCES test_nc_t.cpp)
target_link_libraries(test_nc_t_real_concept boost::test)
target_compile_definitions(test_nc_t_real_concept PUBLIC TEST_REAL_CONCEPT)
bcm_test(NAME test_normal SOURCES test_normal.cpp)
target_link_libraries(test_normal boost::test)
bcm_test(NAME test_owens_t SOURCES test_owens_t.cpp)
target_link_libraries(test_owens_t boost::test)
bcm_test(NAME test_pareto SOURCES test_pareto.cpp)
target_link_libraries(test_pareto boost::test)
bcm_test(NAME test_polygamma SOURCES test_polygamma.cpp)
target_link_libraries(test_polygamma boost::test)
bcm_test(NAME test_trigamma SOURCES test_trigamma.cpp)
target_link_libraries(test_trigamma boost::test)
bcm_test(NAME test_poisson_float SOURCES test_poisson.cpp)
target_link_libraries(test_poisson_float boost::test)
target_compile_definitions(test_poisson_float PUBLIC TEST_FLOAT)
bcm_test(NAME test_poisson_double SOURCES test_poisson.cpp)
target_link_libraries(test_poisson_double boost::test)
target_compile_definitions(test_poisson_double PUBLIC TEST_DOUBLE)
bcm_test(NAME test_poisson_long_double SOURCES test_poisson.cpp)
target_link_libraries(test_poisson_long_double boost::test)
target_compile_definitions(test_poisson_long_double PUBLIC TEST_LDOUBLE)
bcm_test(NAME test_poisson_real_concept SOURCES test_poisson.cpp)
target_link_libraries(test_poisson_real_concept boost::test)
target_compile_definitions(test_poisson_real_concept PUBLIC TEST_REAL_CONCEPT)
bcm_test(NAME test_rayleigh SOURCES test_rayleigh.cpp)
target_link_libraries(test_rayleigh boost::test)

bcm_test(NAME test_rationals SOURCES test_rationals.cpp
test_rational_instances/test_rational_double1.cpp
test_rational_instances/test_rational_double2.cpp
test_rational_instances/test_rational_double3.cpp
test_rational_instances/test_rational_double4.cpp
test_rational_instances/test_rational_double5.cpp
test_rational_instances/test_rational_float1.cpp
test_rational_instances/test_rational_float2.cpp
test_rational_instances/test_rational_float3.cpp
test_rational_instances/test_rational_float4.cpp
test_rational_instances/test_rational_ldouble1.cpp
test_rational_instances/test_rational_ldouble2.cpp
test_rational_instances/test_rational_ldouble3.cpp
test_rational_instances/test_rational_ldouble4.cpp
test_rational_instances/test_rational_ldouble5.cpp
test_rational_instances/test_rational_real_concept1.cpp
test_rational_instances/test_rational_real_concept2.cpp
test_rational_instances/test_rational_real_concept3.cpp
test_rational_instances/test_rational_real_concept4.cpp
test_rational_instances/test_rational_real_concept5.cpp
)
target_link_libraries(test_rationals boost::test)

bcm_test(NAME test_real_concept SOURCES test_real_concept.cpp)
target_link_libraries(test_real_concept boost::test)
# TODO: Disable this test because ublas/serialization is broken
# bcm_test(NAME test_remez SOURCES test_remez.cpp)
# target_link_libraries(test_remez boost::test)
bcm_test(NAME test_roots SOURCES test_roots.cpp)
target_link_libraries(test_roots boost::test)
bcm_test(NAME test_root_iterations SOURCES test_root_iterations.cpp)
target_link_libraries(test_root_iterations boost::test)
bcm_test(NAME test_root_finding_concepts SOURCES test_root_finding_concepts.cpp)
target_link_libraries(test_root_finding_concepts boost::test)
bcm_test(NAME test_round SOURCES test_round.cpp)
target_link_libraries(test_round boost::test)
bcm_test(NAME test_spherical_harmonic SOURCES test_spherical_harmonic.cpp)
target_link_libraries(test_spherical_harmonic boost::test)
bcm_test(NAME test_students_t SOURCES test_students_t.cpp)
target_link_libraries(test_students_t boost::test)
bcm_test(NAME test_sign SOURCES test_sign.cpp)
target_link_libraries(test_sign boost::test)
bcm_test(NAME test_skew_normal SOURCES test_skew_normal.cpp)
target_link_libraries(test_skew_normal boost::test)
bcm_test(NAME test_tgamma_ratio SOURCES test_tgamma_ratio.cpp)
target_link_libraries(test_tgamma_ratio boost::test)
bcm_test(NAME test_toms748_solve SOURCES test_toms748_solve.cpp)
target_link_libraries(test_toms748_solve boost::test)
bcm_test(NAME test_triangular SOURCES test_triangular.cpp)
target_link_libraries(test_triangular boost::test)
bcm_test(NAME test_trig SOURCES test_trig.cpp)
target_link_libraries(test_trig boost::test)
bcm_test(NAME test_uniform SOURCES test_uniform.cpp)
target_link_libraries(test_uniform boost::test)
bcm_test(NAME test_weibull SOURCES test_weibull.cpp)
target_link_libraries(test_weibull boost::test)
bcm_test(NAME test_zeta SOURCES test_zeta.cpp)
target_link_libraries(test_zeta boost::test)

bcm_test(NAME test_policy SOURCES test_policy.cpp)
target_link_libraries(test_policy boost::test)
bcm_test(NAME test_policy_2 SOURCES test_policy_2.cpp)
target_link_libraries(test_policy_2 boost::test)
bcm_test(NAME test_policy_3 SOURCES test_policy_3.cpp)
target_link_libraries(test_policy_3 boost::test)
bcm_test(NAME test_policy_4 SOURCES test_policy_4.cpp)
target_link_libraries(test_policy_4 boost::test)
bcm_test(NAME test_policy_5 SOURCES test_policy_5.cpp)
target_link_libraries(test_policy_5 boost::test)
bcm_test(NAME test_policy_6 SOURCES test_policy_6.cpp)
target_link_libraries(test_policy_6 boost::test)
bcm_test(NAME test_policy_7 SOURCES test_policy_7.cpp)
target_link_libraries(test_policy_7 boost::test)
bcm_test(NAME test_policy_8 SOURCES test_policy_8.cpp)
target_link_libraries(test_policy_8 boost::test)
bcm_test(NAME test_policy_9 SOURCES test_policy_9.cpp COMPILE_ONLY)
target_link_libraries(test_policy_9 boost::test)
bcm_test(NAME test_policy_sf SOURCES test_policy_sf.cpp)
target_link_libraries(test_policy_sf boost::test)

bcm_test(NAME test_tr1 SOURCES test_tr1.cpp)
target_link_libraries(test_tr1 boost::test boost_math_tr1 boost_math_tr1f boost_math_c99 boost_math_c99f)

if(HAVE_SIZEOF_LONG_DOUBLE)
bcm_test(NAME test_tr1_long_double SOURCES test_tr1.cpp)
target_link_libraries(test_tr1_long_double boost::test boost_math_tr1l boost_math_c99l)
target_compile_definitions(test_tr1_long_double PUBLIC TEST_LD=1)
endif()

bcm_test(NAME test_tr1_c SOURCES test_tr1.c)
target_link_libraries(test_tr1_c boost::test boost_math_tr1 boost_math_tr1f boost_math_c99 boost_math_c99f)

if(HAVE_SIZEOF_LONG_DOUBLE)
bcm_test(NAME test_tr1_c_long_double SOURCES test_tr1.c)
target_link_libraries(test_tr1_c_long_double boost::test boost_math_tr1l boost_math_c99l)
target_compile_definitions(test_tr1_c_long_double PUBLIC TEST_LD=1)

bcm_test(NAME test_long_double_support SOURCES test_long_double_support.cpp)
target_link_libraries(test_long_double_support boost::test)
endif()

add_library(compile_test_main STATIC compile_test/main.cpp)
bcm_mark_as_test(compile_test_main)

bcm_test(NAME compile_test_compl_abs_incl_test SOURCES compile_test/compl_abs_incl_test.cpp)
target_link_libraries(compile_test_compl_abs_incl_test compile_test_main)
bcm_test(NAME compile_test_compl_acos_incl_test SOURCES compile_test/compl_acos_incl_test.cpp)
target_link_libraries(compile_test_compl_acos_incl_test compile_test_main)
bcm_test(NAME compile_test_compl_acosh_incl_test SOURCES compile_test/compl_acosh_incl_test.cpp)
target_link_libraries(compile_test_compl_acosh_incl_test compile_test_main)
bcm_test(NAME compile_test_compl_asin_incl_test SOURCES compile_test/compl_asin_incl_test.cpp)
target_link_libraries(compile_test_compl_asin_incl_test compile_test_main)
bcm_test(NAME compile_test_compl_asinh_incl_test SOURCES compile_test/compl_asinh_incl_test.cpp)
target_link_libraries(compile_test_compl_asinh_incl_test compile_test_main)
bcm_test(NAME compile_test_compl_atan_incl_test SOURCES compile_test/compl_atan_incl_test.cpp)
target_link_libraries(compile_test_compl_atan_incl_test compile_test_main)
bcm_test(NAME compile_test_compl_atanh_incl_test SOURCES compile_test/compl_atanh_incl_test.cpp)
target_link_libraries(compile_test_compl_atanh_incl_test compile_test_main)
bcm_test(NAME compile_test_dist_bernoulli_incl_test SOURCES compile_test/dist_bernoulli_incl_test.cpp)
target_link_libraries(compile_test_dist_bernoulli_incl_test compile_test_main)
bcm_test(NAME compile_test_dist_beta_incl_test SOURCES compile_test/dist_beta_incl_test.cpp)
target_link_libraries(compile_test_dist_beta_incl_test compile_test_main)
bcm_test(NAME compile_test_dist_binomial_incl_test SOURCES compile_test/dist_binomial_incl_test.cpp)
target_link_libraries(compile_test_dist_binomial_incl_test compile_test_main)
bcm_test(NAME compile_test_dist_cauchy_incl_test SOURCES compile_test/dist_cauchy_incl_test.cpp)
target_link_libraries(compile_test_dist_cauchy_incl_test compile_test_main)
bcm_test(NAME compile_test_dist_chi_squared_incl_test SOURCES compile_test/dist_chi_squared_incl_test.cpp)
target_link_libraries(compile_test_dist_chi_squared_incl_test compile_test_main)
bcm_test(NAME compile_test_dist_complement_incl_test SOURCES compile_test/dist_complement_incl_test.cpp)
target_link_libraries(compile_test_dist_complement_incl_test compile_test_main)
bcm_test(NAME compile_test_dist_exponential_incl_test SOURCES compile_test/dist_exponential_incl_test.cpp)
target_link_libraries(compile_test_dist_exponential_incl_test compile_test_main)
bcm_test(NAME compile_test_dist_extreme_val_incl_test SOURCES compile_test/dist_extreme_val_incl_test.cpp)
target_link_libraries(compile_test_dist_extreme_val_incl_test compile_test_main)
bcm_test(NAME compile_test_dist_find_location_incl_test SOURCES compile_test/dist_find_location_incl_test.cpp)
target_link_libraries(compile_test_dist_find_location_incl_test compile_test_main)
bcm_test(NAME compile_test_dist_find_scale_incl_test SOURCES compile_test/dist_find_scale_incl_test.cpp)
target_link_libraries(compile_test_dist_find_scale_incl_test compile_test_main)
bcm_test(NAME compile_test_dist_fisher_f_incl_test SOURCES compile_test/dist_fisher_f_incl_test.cpp)
target_link_libraries(compile_test_dist_fisher_f_incl_test compile_test_main)
bcm_test(NAME compile_test_dist_gamma_incl_test SOURCES compile_test/dist_gamma_incl_test.cpp)
target_link_libraries(compile_test_dist_gamma_incl_test compile_test_main)
bcm_test(NAME compile_test_dist_inv_gamma_incl_test SOURCES compile_test/dist_inv_gamma_incl_test.cpp)
target_link_libraries(compile_test_dist_inv_gamma_incl_test compile_test_main)
bcm_test(NAME compile_test_dist_inv_chi_sq_incl_test SOURCES compile_test/dist_inv_chi_sq_incl_test.cpp)
target_link_libraries(compile_test_dist_inv_chi_sq_incl_test compile_test_main)
bcm_test(NAME compile_test_dist_hyperexponential_incl_test SOURCES compile_test/dist_hyperexponential_incl_test.cpp)
target_link_libraries(compile_test_dist_hyperexponential_incl_test compile_test_main)
bcm_test(NAME compile_test_dist_hypergeo_incl_test SOURCES compile_test/dist_hypergeo_incl_test.cpp)
target_link_libraries(compile_test_dist_hypergeo_incl_test compile_test_main)
bcm_test(NAME compile_test_dist_laplace_incl_test SOURCES compile_test/dist_laplace_incl_test.cpp)
target_link_libraries(compile_test_dist_laplace_incl_test compile_test_main)
bcm_test(NAME compile_test_dist_logistic_incl_test SOURCES compile_test/dist_logistic_incl_test.cpp)
target_link_libraries(compile_test_dist_logistic_incl_test compile_test_main)
bcm_test(NAME compile_test_dist_lognormal_incl_test SOURCES compile_test/dist_lognormal_incl_test.cpp)
target_link_libraries(compile_test_dist_lognormal_incl_test compile_test_main)
bcm_test(NAME compile_test_dist_neg_binom_incl_test SOURCES compile_test/dist_neg_binom_incl_test.cpp)
target_link_libraries(compile_test_dist_neg_binom_incl_test compile_test_main)
bcm_test(NAME compile_test_dist_nc_chi_squ_incl_test SOURCES compile_test/dist_nc_chi_squ_incl_test.cpp)
target_link_libraries(compile_test_dist_nc_chi_squ_incl_test compile_test_main)
bcm_test(NAME compile_test_dist_nc_beta_incl_test SOURCES compile_test/dist_nc_beta_incl_test.cpp)
target_link_libraries(compile_test_dist_nc_beta_incl_test compile_test_main)
bcm_test(NAME compile_test_dist_nc_f_incl_test SOURCES compile_test/dist_nc_f_incl_test.cpp)
target_link_libraries(compile_test_dist_nc_f_incl_test compile_test_main)
bcm_test(NAME compile_test_dist_nc_t_incl_test SOURCES compile_test/dist_nc_t_incl_test.cpp)
target_link_libraries(compile_test_dist_nc_t_incl_test compile_test_main)
bcm_test(NAME compile_test_dist_normal_incl_test SOURCES compile_test/dist_normal_incl_test.cpp)
target_link_libraries(compile_test_dist_normal_incl_test compile_test_main)
bcm_test(NAME compile_test_dist_poisson_incl_test SOURCES compile_test/dist_poisson_incl_test.cpp)
target_link_libraries(compile_test_dist_poisson_incl_test compile_test_main)
bcm_test(NAME compile_test_dist_students_t_incl_test SOURCES compile_test/dist_students_t_incl_test.cpp)
target_link_libraries(compile_test_dist_students_t_incl_test compile_test_main)
bcm_test(NAME compile_test_dist_triangular_incl_test SOURCES compile_test/dist_triangular_incl_test.cpp)
target_link_libraries(compile_test_dist_triangular_incl_test compile_test_main)
bcm_test(NAME compile_test_dist_uniform_incl_test SOURCES compile_test/dist_uniform_incl_test.cpp)
target_link_libraries(compile_test_dist_uniform_incl_test compile_test_main)
bcm_test(NAME compile_test_dist_weibull_incl_test SOURCES compile_test/dist_weibull_incl_test.cpp)
target_link_libraries(compile_test_dist_weibull_incl_test compile_test_main)
bcm_test(NAME compile_test_distribution_concept_check SOURCES compile_test/distribution_concept_check.cpp)
target_link_libraries(compile_test_distribution_concept_check compile_test_main)
bcm_test(NAME compile_test_sf_beta_incl_test SOURCES compile_test/sf_beta_incl_test.cpp)
target_link_libraries(compile_test_sf_beta_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_bernoulli_incl_test SOURCES compile_test/sf_bernoulli_incl_test.cpp)
target_link_libraries(compile_test_sf_bernoulli_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_bessel_incl_test SOURCES compile_test/sf_bessel_incl_test.cpp)
target_link_libraries(compile_test_sf_bessel_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_bessel_deriv_incl_test SOURCES compile_test/sf_bessel_deriv_incl_test.cpp)
target_link_libraries(compile_test_sf_bessel_deriv_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_binomial_incl_test SOURCES compile_test/sf_binomial_incl_test.cpp)
target_link_libraries(compile_test_sf_binomial_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_cbrt_incl_test SOURCES compile_test/sf_cbrt_incl_test.cpp)
target_link_libraries(compile_test_sf_cbrt_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_cos_pi_incl_test SOURCES compile_test/sf_cos_pi_incl_test.cpp)
target_link_libraries(compile_test_sf_cos_pi_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_digamma_incl_test SOURCES compile_test/sf_digamma_incl_test.cpp)
target_link_libraries(compile_test_sf_digamma_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_polygamma_incl_test SOURCES compile_test/sf_polygamma_incl_test.cpp)
target_link_libraries(compile_test_sf_polygamma_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_ellint_1_incl_test SOURCES compile_test/sf_ellint_1_incl_test.cpp)
target_link_libraries(compile_test_sf_ellint_1_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_ellint_2_incl_test SOURCES compile_test/sf_ellint_2_incl_test.cpp)
target_link_libraries(compile_test_sf_ellint_2_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_ellint_3_incl_test SOURCES compile_test/sf_ellint_3_incl_test.cpp)
target_link_libraries(compile_test_sf_ellint_3_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_ellint_d_incl_test SOURCES compile_test/sf_ellint_d_incl_test.cpp)
target_link_libraries(compile_test_sf_ellint_d_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_jacobi_zeta_incl_test SOURCES compile_test/sf_jacobi_zeta_incl_test.cpp)
target_link_libraries(compile_test_sf_jacobi_zeta_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_heuman_lambda_incl_test SOURCES compile_test/sf_heuman_lambda_incl_test.cpp)
target_link_libraries(compile_test_sf_heuman_lambda_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_ellint_rc_incl_test SOURCES compile_test/sf_ellint_rc_incl_test.cpp)
target_link_libraries(compile_test_sf_ellint_rc_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_ellint_rd_incl_test SOURCES compile_test/sf_ellint_rd_incl_test.cpp)
target_link_libraries(compile_test_sf_ellint_rd_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_ellint_rf_incl_test SOURCES compile_test/sf_ellint_rf_incl_test.cpp)
target_link_libraries(compile_test_sf_ellint_rf_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_ellint_rj_incl_test SOURCES compile_test/sf_ellint_rj_incl_test.cpp)
target_link_libraries(compile_test_sf_ellint_rj_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_ellint_rg_incl_test SOURCES compile_test/sf_ellint_rg_incl_test.cpp)
target_link_libraries(compile_test_sf_ellint_rg_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_erf_incl_test SOURCES compile_test/sf_erf_incl_test.cpp)
target_link_libraries(compile_test_sf_erf_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_expint_incl_test SOURCES compile_test/sf_expint_incl_test.cpp)
target_link_libraries(compile_test_sf_expint_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_expm1_incl_test SOURCES compile_test/sf_expm1_incl_test.cpp)
target_link_libraries(compile_test_sf_expm1_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_factorials_incl_test SOURCES compile_test/sf_factorials_incl_test.cpp)
target_link_libraries(compile_test_sf_factorials_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_fpclassify_incl_test SOURCES compile_test/sf_fpclassify_incl_test.cpp)
target_link_libraries(compile_test_sf_fpclassify_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_gamma_incl_test SOURCES compile_test/sf_gamma_incl_test.cpp)
target_link_libraries(compile_test_sf_gamma_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_hermite_incl_test SOURCES compile_test/sf_hermite_incl_test.cpp)
target_link_libraries(compile_test_sf_hermite_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_hypot_incl_test SOURCES compile_test/sf_hypot_incl_test.cpp)
target_link_libraries(compile_test_sf_hypot_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_laguerre_incl_test SOURCES compile_test/sf_laguerre_incl_test.cpp)
target_link_libraries(compile_test_sf_laguerre_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_lanczos_incl_test SOURCES compile_test/sf_lanczos_incl_test.cpp COMPILE_ONLY)
target_link_libraries(compile_test_sf_lanczos_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_legendre_incl_test SOURCES compile_test/sf_legendre_incl_test.cpp)
target_link_libraries(compile_test_sf_legendre_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_log1p_incl_test SOURCES compile_test/sf_log1p_incl_test.cpp)
target_link_libraries(compile_test_sf_log1p_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_math_fwd_incl_test SOURCES compile_test/sf_math_fwd_incl_test.cpp COMPILE_ONLY)
target_link_libraries(compile_test_sf_math_fwd_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_modf_incl_test SOURCES compile_test/sf_modf_incl_test.cpp)
target_link_libraries(compile_test_sf_modf_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_next_incl_test SOURCES compile_test/sf_next_incl_test.cpp)
target_link_libraries(compile_test_sf_next_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_powm1_incl_test SOURCES compile_test/sf_powm1_incl_test.cpp)
target_link_libraries(compile_test_sf_powm1_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_relative_distance_incl_test SOURCES compile_test/sf_relative_distance_incl_test.cpp)
target_link_libraries(compile_test_sf_relative_distance_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_round_incl_test SOURCES compile_test/sf_round_incl_test.cpp)
target_link_libraries(compile_test_sf_round_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_sign_incl_test SOURCES compile_test/sf_sign_incl_test.cpp)
target_link_libraries(compile_test_sf_sign_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_sin_pi_incl_test SOURCES compile_test/sf_sin_pi_incl_test.cpp)
target_link_libraries(compile_test_sf_sin_pi_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_sinc_incl_test SOURCES compile_test/sf_sinc_incl_test.cpp)
target_link_libraries(compile_test_sf_sinc_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_sinhc_incl_test SOURCES compile_test/sf_sinhc_incl_test.cpp)
target_link_libraries(compile_test_sf_sinhc_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_sph_harm_incl_test SOURCES compile_test/sf_sph_harm_incl_test.cpp)
target_link_libraries(compile_test_sf_sph_harm_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_sqrt1pm1_incl_test SOURCES compile_test/sf_sqrt1pm1_incl_test.cpp)
target_link_libraries(compile_test_sf_sqrt1pm1_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_trunc_incl_test SOURCES compile_test/sf_trunc_incl_test.cpp)
target_link_libraries(compile_test_sf_trunc_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_ulp_incl_test SOURCES compile_test/sf_ulp_incl_test.cpp)
target_link_libraries(compile_test_sf_ulp_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_zeta_incl_test SOURCES compile_test/sf_zeta_incl_test.cpp)
target_link_libraries(compile_test_sf_zeta_incl_test compile_test_main)
bcm_test(NAME compile_test_std_real_concept_check SOURCES compile_test/std_real_concept_check.cpp)
target_link_libraries(compile_test_std_real_concept_check compile_test_main)
bcm_test(NAME compile_test_cstdfloat_concept_check_1 SOURCES compile_test/cstdfloat_concept_check_1.cpp)
target_link_libraries(compile_test_cstdfloat_concept_check_1 compile_test_main)
bcm_test(NAME compile_test_cstdfloat_concept_check_2 SOURCES compile_test/cstdfloat_concept_check_2.cpp)
target_link_libraries(compile_test_cstdfloat_concept_check_2 compile_test_main)
bcm_test(NAME compile_test_cstdfloat_concept_check_3 SOURCES compile_test/cstdfloat_concept_check_3.cpp)
target_link_libraries(compile_test_cstdfloat_concept_check_3 compile_test_main)
bcm_test(NAME compile_test_cstdfloat_concept_check_4 SOURCES compile_test/cstdfloat_concept_check_4.cpp)
target_link_libraries(compile_test_cstdfloat_concept_check_4 compile_test_main)
bcm_test(NAME compile_test_sf_airy_incl_test SOURCES compile_test/sf_airy_incl_test.cpp)
target_link_libraries(compile_test_sf_airy_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_hankel_incl_test SOURCES compile_test/sf_hankel_incl_test.cpp)
target_link_libraries(compile_test_sf_hankel_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_jacobi_incl_test SOURCES compile_test/sf_jacobi_incl_test.cpp)
target_link_libraries(compile_test_sf_jacobi_incl_test compile_test_main)
bcm_test(NAME compile_test_sf_owens_t_incl_test SOURCES compile_test/sf_owens_t_incl_test.cpp)
target_link_libraries(compile_test_sf_owens_t_incl_test compile_test_main)
bcm_test(NAME compile_test_dist_skew_norm_incl_test SOURCES compile_test/dist_skew_norm_incl_test.cpp)
target_link_libraries(compile_test_dist_skew_norm_incl_test compile_test_main)
bcm_test(NAME compile_test_constants_incl_test SOURCES compile_test/constants_incl_test.cpp)
target_link_libraries(compile_test_constants_incl_test compile_test_main)

bcm_test(NAME compile_test_test_traits SOURCES compile_test/test_traits.cpp COMPILE_ONLY)
bcm_test(NAME compile_test_tools_config_inc_test SOURCES compile_test/tools_config_inc_test.cpp COMPILE_ONLY)
bcm_test(NAME compile_test_tools_fraction_inc_test SOURCES compile_test/tools_fraction_inc_test.cpp COMPILE_ONLY)
bcm_test(NAME compile_test_tools_minima_inc_test SOURCES compile_test/tools_minima_inc_test.cpp COMPILE_ONLY)
bcm_test(NAME compile_test_tools_polynomial_inc_test SOURCES compile_test/tools_polynomial_inc_test.cpp COMPILE_ONLY)
bcm_test(NAME compile_test_tools_precision_inc_test SOURCES compile_test/tools_precision_inc_test.cpp COMPILE_ONLY)
bcm_test(NAME compile_test_tools_rational_inc_test SOURCES compile_test/tools_rational_inc_test.cpp COMPILE_ONLY)
bcm_test(NAME compile_test_tools_real_cast_inc_test SOURCES compile_test/tools_real_cast_inc_test.cpp COMPILE_ONLY)
bcm_test(NAME compile_test_tools_remez_inc_test SOURCES compile_test/tools_remez_inc_test.cpp COMPILE_ONLY)
bcm_test(NAME compile_test_tools_roots_inc_test SOURCES compile_test/tools_roots_inc_test.cpp COMPILE_ONLY)
bcm_test(NAME compile_test_tools_series_inc_test SOURCES compile_test/tools_series_inc_test.cpp COMPILE_ONLY)
bcm_test(NAME compile_test_tools_solve_inc_test SOURCES compile_test/tools_solve_inc_test.cpp COMPILE_ONLY)
bcm_test(NAME compile_test_tools_stats_inc_test SOURCES compile_test/tools_stats_inc_test.cpp COMPILE_ONLY)
bcm_test(NAME compile_test_tools_test_data_inc_test SOURCES compile_test/tools_test_data_inc_test.cpp COMPILE_ONLY)
bcm_test(NAME compile_test_tools_test_inc_test SOURCES compile_test/tools_test_inc_test.cpp COMPILE_ONLY)
bcm_test(NAME compile_test_tools_toms748_inc_test SOURCES compile_test/tools_toms748_inc_test.cpp COMPILE_ONLY)

bcm_test(NAME ___test_common_factor_test SOURCES ../test/common_factor_test.cpp)
target_link_libraries(___test_common_factor_test boost::test)

bcm_test(NAME octonion_test SOURCES octonion_test.cpp)
target_link_libraries(octonion_test boost::test)

bcm_test(NAME quaternion_test SOURCES quaternion_test.cpp)
target_link_libraries(quaternion_test boost::test)

bcm_test(NAME quaternion_mult_incl_test SOURCES quaternion_mult_incl_test.cpp quaternion_mi1.cpp quaternion_mi2.cpp)
target_link_libraries(quaternion_mult_incl_test boost::test)


bcm_test(NAME test_legacy_nonfinite SOURCES test_legacy_nonfinite.cpp)
target_link_libraries(test_legacy_nonfinite boost::test)
bcm_test(NAME test_basic_nonfinite SOURCES test_basic_nonfinite.cpp)
target_link_libraries(test_basic_nonfinite boost::test)
bcm_test(NAME test_lexical_cast SOURCES test_lexical_cast.cpp)
target_link_libraries(test_lexical_cast boost::test)
bcm_test(NAME test_nonfinite_trap SOURCES test_nonfinite_trap.cpp)
target_link_libraries(test_nonfinite_trap boost::test)
set_target_properties(test_nonfinite_trap PROPERTIES CXX_EXCEPTIONS off)
bcm_test(NAME test_signed_zero SOURCES test_signed_zero.cpp)
target_link_libraries(test_signed_zero boost::test)

bcm_test(NAME complex_test SOURCES complex_test.cpp)
target_link_libraries(complex_test boost::test)
bcm_test(NAME test_polynomial SOURCES test_polynomial.cpp)
target_link_libraries(test_polynomial boost::test)
bcm_test(NAME test_gcd SOURCES test_gcd.cpp)
target_link_libraries(test_gcd boost::test)

bcm_test(NAME multiprc_concept_check_1 SOURCES multiprc_concept_check_1.cpp COMPILE_ONLY)
target_link_libraries(multiprc_concept_check_1 boost::test)
set_target_properties(multiprc_concept_check_1 PROPERTIES CXX_EXCEPTIONS off)
bcm_test(NAME multiprc_concept_check_2 SOURCES multiprc_concept_check_2.cpp COMPILE_ONLY)
target_link_libraries(multiprc_concept_check_2 boost::test)
set_target_properties(multiprc_concept_check_2 PROPERTIES CXX_EXCEPTIONS off)
bcm_test(NAME multiprc_concept_check_3 SOURCES multiprc_concept_check_3.cpp COMPILE_ONLY)
target_link_libraries(multiprc_concept_check_3 boost::test)
set_target_properties(multiprc_concept_check_3 PROPERTIES CXX_EXCEPTIONS off)
bcm_test(NAME multiprc_concept_check_4 SOURCES multiprc_concept_check_4.cpp COMPILE_ONLY)
target_link_libraries(multiprc_concept_check_4 boost::test)
set_target_properties(multiprc_concept_check_4 PROPERTIES CXX_EXCEPTIONS off)

# TODO: Check the dependencies of these tests
# bcm_test(NAME ntl_concept_check SOURCES ntl_concept_check.cpp COMPILE_ONLY)
# target_link_libraries(ntl_concept_check boost::test)
# bcm_test(NAME mpfr_concept_check SOURCES mpfr_concept_check.cpp COMPILE_ONLY)
# target_link_libraries(mpfr_concept_check boost::test)
# bcm_test(NAME mpreal_concept_check SOURCES mpreal_concept_check.cpp COMPILE_ONLY)
# target_link_libraries(mpreal_concept_check boost::test)
# bcm_test(NAME e_float_concept_check SOURCES e_float_concept_check.cpp COMPILE_ONLY)
# target_link_libraries(e_float_concept_check boost::test)
# bcm_test(NAME test_common_factor_gmpxx SOURCES test_common_factor_gmpxx.cpp COMPILE_ONLY)
# target_link_libraries(test_common_factor_gmpxx boost::test)
# set_target_properties(test_common_factor_gmpxx PROPERTIES CXX_EXCEPTIONS off)

# Temporary tests for support of max_digits10
# run ztest_max_digits10.cpp ;
# run zztest_max_digits10.cpp ;
#  Removed as inexplicably failing for VS12 on teeks99 but OK locally.

# TODO: Add float128 tests
# bcm_test(NAME $(source) SOURCES $(source))
